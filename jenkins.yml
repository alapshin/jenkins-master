jenkins:
  # Disable builds on master
  mode: EXCLUSIVE

  # Configure crumb issuer
  crumbIssuer: standard
  # Enable agent -> master access control
  remotingSecurity:
    enabled: true

  # Configure Docker cloud
  clouds:
    - docker:
        name: "docker"
        dockerApi:
          dockerHost:
            uri: "unix:///var/run/docker.sock"
        templates:
          - labelString: "android-agent"
            mode: EXCLUSIVE
            connector:
              attach:
                user: "jenkins"
            remoteFs: "/home/jenkins"
            instanceCapStr: "1"
            dockerTemplateBase:
              image: "alapshin/jenkins-android-agent:latest"
              volumesString: "android_sdk:/opt/android-sdk\njenkins_agent_home:/home/jenkins\njenkins_agent_cache:/home/jenkins/.jenkins\njenkins_agent_workdir:/home/jenkins/agent"

  # Configure agent protocols
  agentProtocols:
    - "Ping"
    - "JNLP4-connect"

  # Configure local users
  # Disable ability to signup
  # Create administrator account
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: ${ADMIN_PASSWORD}

  # Configure role-based authorization strategy
  authorizationStrategy:
    roleBased:
      roles:
        global:
          - name: "admin"
            description: "Jenkins administrators"
            permissions:
              - "Overall/Administer"
            assignments:
              - "admin"
          - name: "authenticated"
            description: "Authenticated users"
            permissions:
              - "Job/Read"
              - "Job/Discover"
              - "Overall/Read"
            assignments:
              - "authenticated"


# Disable CLI over Remoting
security:
  remotingCLI:
    enabled: false

credentials:
  system:
    domainCredentials:
      - domain:
          name: "Slack"
          description: "Slack"
          specifications:
            - hostnameSpecification:
                includes: "slack.com, *.slack.com"
        credentials:
          - string:
              scope: GLOBAL
              id: slack_token
              secret: ${SLACK_TOKEN}
      - domain:
          name: "GitHub"
          description: "Github"
          specifications:
            - hostnameSpecification:
                includes: "github.com, *.github.com"
        credentials:
          - string:
              scope: GLOBAL
              id: github_access_token
              secret: ${GITHUB_TOKEN}
          - usernamePassword:
              scope: GLOBAL
              id: github_username_password
              username: ${GITHUB_USERNAME}
              password: ${GITHUB_PASSWORD}

unclassified:
  location:
    url: ${JENKINS_URL}

  # Configure GitHub plugin
  githubpluginconfig:
    configs:
      - name: GitHub
        apiUrl: https://api.github.com
        manageHooks: true
        credentialsId: github_access_token

  # Configure SonarQube plugin
  sonarglobalconfiguration:
    installations:
      - name: SonarQube
        serverUrl: ${SONARQUBE_URL}
        serverAuthenticationToken: ${SONARQUBE_TOKEN}

  # Configure simple theme plugin
  simplethemedecorator:
    cssUrl: https://tobix.github.io/jenkins-neo2-theme/dist/neo-light.css

